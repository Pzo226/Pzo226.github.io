/* this going to be a lot of my worrk and what i have learned */
#mainContainer {
  display: grid;
  height: 100vh;
  
  background-color: aquamarine;
grid-template-areas: 
'header header header'
'nav content aside'
'nav content aside'
'nav footer footer'
;
   
}

header {
  grid-area: header;
  grid-column: 1 / 2 ;
  background-color: bisque;
  
}





/* transition: then the property that you want to animate the second proerty is the duration/time time can be seconds or milliseconds */
/* we can refine this anamation by addinal value for a delay or  or a timing function us a built in function or create your own custom cubic-bezier(); */
/* or you want to animate somthing forever or in multple steps @ keyframs let you define animation independent or a selector. steps name it give you @keyframe a name  (selector) you can use this animation by refrencing it as the animation name in one for you selectors then the duration and the animation-iteration-count */

body {
  margin: 0;
  margin-bottom: 25rem;
  color: black;
}

.grid {
  margin: 0px 200px 0px 200px;
  border: black;
  border: 0px 200px 0px 200px;
}

.img-wrapper {
  position: relative;
  overflow: hidden;
}

.img-wrapper > img {
  display: block;
  width: 100%;
  aspect-ratio: 1 / 1;
  object-fit: cover;
  object-position: center;
  background-attachment: fixed;
}

.img-wrapper > .content {
  position: absolute;
  inset: 0;
  font-size: 2rem;
  padding: 1rem;
  background: rgba(255, 255, 255, .4);
  display: flex;
  justify-content: center;
  align-items: center;
}

.img-wrapper > img,
.img-wrapper > .content {
  transition: 200ms ease-in-out;
}

.img-wrapper:hover > img.blur {
  filter: blur(5px);
}

.img-wrapper:hover > img.gray {
  filter: grayscale(1);
}

.img-wrapper:hover > img.zoom {
  transform: scale(1.1);
}

.img-wrapper > .content.fade {
  opacity: 0;
}
.img-wrapper:hover > .content.fade {
  opacity: 1;
}

.img-wrapper > .content.slide-left {
  transform: translateX(-100%);
}
.img-wrapper:hover > .content.slide-left {
  transform: translateX(0);
}

.img-wrapper > .content.slide-right {
  transform: translateX(100%);
}
.img-wrapper:hover > .content.slide-right {
  transform: translateX(0);
}

.img-wrapper > .content.slide-down {
  transform: translateY(-100%);
}
.img-wrapper:hover > .content.slide-down {
  transform: translateY(0);
}

.img-wrapper > .content.slide-up {
  transform: translateY(100%);
}
.img-wrapper:hover > .content.slide-up {
  transform: translateY(0);
}

/* Dropdown button on hover & focus */
.dropbtn:hover, .dropbtn:focus {
  background-color: #666;
}

.show {
  display:block;
}

/* Dropdown Button */
.dropbtn {
  background-color: #777777;
  color: pink;
  padding: 16px;
  font-size: 16px;
  border: none;
}

/* The container <div> - needed to position the dropdown content */
.dropdown {
  position: relative;
  display: inline-block;
  color: pink;
}

/* Dropdown Content (Hidden by Default) */
.dropdown-content {
  display: none;
  background-color: transparent;
 
}

/* Links inside the dropdown */
.dropdown-content > a {
  color: pink;
  padding: ;
  display: block;
  background-color: #777777;
}

button.dropbtn { 
  margin: 5px;
  border: 20px;
  box-shadow: 0px 16px 5px 5px rgba(0,0,0,0,2);
}



/* Change color of dropdown links on hover */
.dropdown-content a:hover {background-color: transparent;}

/* Show the dropdown menu on hover */
.dropdown:hover .dropdown-content {display: block;}

/* Change the background color of the dropdown button when the dropdown content is shown */
.dropdown:hover .dropbtn {background-color: #666;}

h1{
  color: #fff;
  font-size: 50px;
  font-weight: bold;
  font-family: monospace;
  letter-spacing: 7px;
  cursor: pointer
}
h1 span{
  transition: .5s linear
}
h1:hover span:nth-child(1){
  margin-right: 5px
}
h1:hover span:nth-child(1):after{
  content: "'";
}
h1:hover span:nth-child(2){
  margin-left: 30px
}
h1:hover span{
  color: #fff;
  text-shadow: 0 0 10px #fff,
               0 0 20px #fff, 
               0 0 40px #fff;
}